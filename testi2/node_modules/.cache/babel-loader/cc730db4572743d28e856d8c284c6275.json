{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Topi\\\\Desktop\\\\Fullstack-2022\\\\testi2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  console.log('render', notes.length, 'notes');\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"FCyYQoy7W81ILpY5br8A5Ij5EmM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Topi/Desktop/Fullstack-2022/testi2/src/App.js"],"names":["useState","useEffect","Note","Notification","Footer","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","create","returnedNote","concat","handleNoteChange","target","value","toggleImportanceOf","id","note","find","n","changedNote","update","map","catch","error","setTimeout","filter","console","log","length","notesToShow"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\n\r\nimport noteService from './services/notes'\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n        .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n  \r\n    noteService\r\n      .create(noteObject)\r\n        .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      }) \r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n        .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important === true)\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note \r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n            />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}