{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Topi\\\\Desktop\\\\Fullstack-2022\\\\testi2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport Togglable from './components/Togglable';\nimport NoteForm from './components/NoteForm';\nimport noteService from './services/notes';\nimport loginService from './services/login';\nimport LoginForm from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  console.log('render', notes.length, 'notes');\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user));\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"login\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        password: password,\n        handleUsernameChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        },\n        handlePasswordChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        },\n        handleSubmit: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"new note\",\n        children: /*#__PURE__*/_jsxDEV(NoteForm, {\n          onSubmit: addNote,\n          value: newNote,\n          handleChange: handleNoteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jxNE3l6h8feAk1pMvHlovgVCHAU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Topi/Desktop/Fullstack-2022/testi2/src/App.js"],"names":["useState","useEffect","Note","Notification","Footer","Togglable","NoteForm","noteService","loginService","LoginForm","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","getAll","then","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","length","create","returnedNote","concat","handleNoteChange","target","value","toggleImportanceOf","note","find","n","changedNote","update","map","catch","error","setTimeout","filter","console","log","notesToShow","handleLogin","login","setItem","stringify","exception","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\nimport Togglable from './components/Togglable'\r\nimport NoteForm from './components/NoteForm'\r\n\r\nimport noteService from './services/notes'\r\nimport loginService from './services/login'\r\nimport LoginForm from './components/Login'\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n        .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1\r\n    }\r\n  \r\n    noteService\r\n      .create(noteObject)\r\n        .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      }) \r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n        .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important === true)\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedNoteappUser', JSON.stringify(user)\r\n      )\r\n      noteService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n\r\n      <Notification message={errorMessage} />\r\n\r\n      {user === null ?\r\n        <Togglable buttonLabel='login'>\r\n          <LoginForm\r\n          username={username}\r\n          password={password}\r\n          handleUsernameChange={({ target }) => setUsername(target.value)}\r\n          handlePasswordChange={({ target }) => setPassword(target.value)}\r\n          handleSubmit={handleLogin}\r\n          />\r\n        </Togglable> :\r\n        <div>\r\n          <p>{user.name} logged in</p>\r\n          <Togglable buttonLabel=\"new note\">\r\n            <NoteForm\r\n              onSubmit={addNote}\r\n              value={newNote}\r\n              handleChange={handleNoteChange}\r\n            />\r\n          </Togglable>\r\n        </div>\r\n      }\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note \r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n            />\r\n        )}\r\n      </ul>\r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}