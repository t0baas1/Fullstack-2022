{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  };\n  return request.then(response => response.data.concat(nonExisting));\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update\n};","map":{"version":3,"sources":["C:/Users/Topi/Desktop/Fullstack-2022/testi2/src/services/notes.js"],"names":["axios","baseUrl","getAll","request","get","nonExisting","id","content","date","important","then","response","data","concat","create","newObject","post","update","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,6BAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB;AACA,QAAMI,WAAW,GAAG;AAChBC,IAAAA,EAAE,EAAE,KADY;AAEhBC,IAAAA,OAAO,EAAE,kCAFO;AAGhBC,IAAAA,IAAI,EAAE,0BAHU;AAIhBC,IAAAA,SAAS,EAAE;AAJK,GAApB;AAMA,SAAON,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBR,WAArB,CAAzB,CAAP;AACH,CATD;;AAWA,MAAMS,MAAM,GAAGC,SAAS,IAAI;AACxB,QAAMZ,OAAO,GAAEH,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBc,SAApB,CAAf;AACA,SAAOZ,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,MAAMK,MAAM,GAAG,CAACX,EAAD,EAAKS,SAAL,KAAmB;AAC9B,QAAMZ,OAAO,GAAGH,KAAK,CAACkB,GAAN,CAAW,GAAEjB,OAAQ,IAAGK,EAAG,EAA3B,EAA8BS,SAA9B,CAAhB;AACA,SAAOZ,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,eAAe;AAAEV,EAAAA,MAAF;AAAUY,EAAAA,MAAV;AAAkBG,EAAAA;AAAlB,CAAf","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n    const request =axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }"]},"metadata":{},"sourceType":"module"}